<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[一个简单的安卓日志工具类trace]]></title>
    <url>%2F2017%2F07%2F30%2F%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%AE%89%E5%8D%93%E6%97%A5%E5%BF%97%E5%B7%A5%E5%85%B7%E7%B1%BBtrace%2F</url>
    <content type="text"><![CDATA[Trace一个简单的日志封装类，支持打印日志时的常用功能，代码简单就一个类，源码清晰；使用方法gradle添加依赖compile &#39;cn.raiseyang:lib_trace:1.0.1&#39;源码地址:https://github.com/raiseyang/Trace功能方便调用：Trace.d();无需初始化，直接使用支持保存文件支持logcat跟踪源码支持自定义配置支持格式化打印array,list,map,set,json,xml支持打印线程信息支持格式化字符串支持打印异常调用栈不足控制台输出4K的限制，日志文件无限制示例12345678910111213Trace.d(TAG, &quot; d&quot;);Trace.i(TAG, &quot; i&quot;);Trace.w(TAG, &quot; w&quot;);Trace.e(TAG, &quot; e = &quot; + null);Trace.d(TAG, &quot; %s,%d&quot;, &quot;raise&quot;, 1);Trace.i(TAG, &quot; %s,%d&quot;, &quot;raise&quot;, 1);Trace.w(TAG, &quot; %s,%d&quot;, &quot;raise&quot;, 1);Trace.e(TAG, new NullPointerException(&quot;fu*k null pointer exception.&quot;));Trace.json(TAG, &quot;&#123;\&quot;name\&quot;:\&quot;BeJson\&quot;,\&quot;url\&quot;:\&quot;http://www.bejson.com\&quot;,\&quot;page\&quot;:88,\&quot;isNonProfit\&quot;:true&#125;&quot;);Trace.array(TAG, new String[]&#123;&quot;value1&quot;, &quot;value2&quot;&#125;);Trace.list(TAG, Arrays.asList(&quot;list1&quot;, &quot;list2&quot;, &quot;list3&quot;));Trace.xml(TAG,&quot;&lt;student&gt;&lt;age&gt;12&lt;/age&gt;&lt;name&gt;jack&lt;/name&gt;&lt;skill&gt;&lt;language&gt;chinese&lt;/language&gt;&lt;run&gt;22&lt;/run&gt;&lt;/skill&gt;&lt;/student&gt;&quot;);Trace.file(TAG, new File(Environment.getExternalStorageDirectory().getAbsolutePath()+&quot;/test.log&quot;));效果其他如果你感觉好用，欢迎上 github 给我star,fork。若对本库有更好的意见或建议，欢迎评论。]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>trace</tag>
        <tag>android</tag>
        <tag>log</tag>
        <tag>logger</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git使用方法]]></title>
    <url>%2F2017%2F07%2F28%2Fgit%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[创建本地分支并push到远程12345git initgit add . # 添加所有文件到git仓库，建议创建.gitignore文件过滤git commit -m &apos;提交消息&apos; # 提交代码到本地git remote add origin git@github.com:raiseyang/hexo-source-file.git # 关联远程仓库git push --set-upstream origin master # push本地分支到远程仓库参考资料:Git 教程 | 菜鸟教程Git教程 - 廖雪峰的官方网站]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python requests https证书配置]]></title>
    <url>%2F2017%2F07%2F25%2Fpython%E6%97%A5%E6%9C%9F%2F</url>
    <content type="text"><![CDATA[requests官方文档]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment博客搭建全记录]]></content>
  </entry>
  <entry>
    <title><![CDATA['Hello']]></title>
    <url>%2F2017%2F07%2F23%2FHello%2F</url>
    <content type="text"><![CDATA[这是一篇测试hexo的文章我是一个h2的title我是文本h3的标题我是文本我是一个h2的title我是文本h3的标题我是文本h3的标题我是文本h3的标题我是文本]]></content>
  </entry>
</search>